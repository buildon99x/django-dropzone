
#user  nobody;
worker_processes  8;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  4096;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';


    #access_log ./logs/access.log  main;
    # Buffer log writes to speed up IO, or disable them altogether
    #access_log /var/log/nginx/access.log main buffer=16k;
    error_log ./logs/error.log crit;
    
    sendfile        on;
    
    # Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. This is useful for prepending headers before calling sendfile,
    # or for throughput optimization.
    #tcp_nopush     on;

    #keepalive_timeout  0;
    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout  15;
    
    # Accept as many connections as possible, after nginx gets notification about a new connection.
    # May flood worker_connections, if that option is set too low.
    #multi_accept on; 
    
    # allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
    reset_timedout_connection on;
    
# If the client stops reading data, free up the stale client connection after this much time. Default 60.
    send_timeout 180;

# Caches information about open FDs, freqently accessed files.
# Changing this setting, in my environment, brought performance up from 560k req/sec, to 904k req/sec.
# I recommend using some varient of these options, though not the specific values listed below.
   open_file_cache max=1000 inactive=20s; 
   open_file_cache_valid    30s; 
   open_file_cache_min_uses 2;
   open_file_cache_errors   on;

   
# Compression. Reduces the amount of data that needs to be transferred over the network
    gzip on;
    #gzip_min_length 10240;
    #gzip_proxied expired no-cache no-store private auth;
    #gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    #gzip_disable "MSIE [1-6]\.";
    
    # 실행되는 서버 포트만큼 upstream에 추가한다. 
    upstream fs {
        least_conn;
        server 127.0.0.1:8000;
        server 127.0.0.1:8001;
        server 127.0.0.1:8002;
        server 127.0.0.1:8003;
    }
    
    ###########################################
    # Log File Manager Server 
    ###########################################
    server {
        listen      80;
        server_name _;
        proxy_request_buffering off;        # 파일업로드를 위한 설정.
        
        ## Log File Manager Application 
        location /fs {
            proxy_pass http://fs;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_hide_header 'x-frame-options';
            access_log off;
	        client_max_body_size 10M;       # 업로드 파일 사이즈 제한.
        }

        ## Log File Manager Application에서 사용하는 static file을 host를 위한 설정. ( mysite/settings.py : STATIC_ROOT 값을 지정 )
        location /fs_static {
            # 어플리케이션에 소스에 있는 fs_static 폴더의 절대경로 지정 
            alias D:\sol\playwatcher\fileuploadserver\src\fs_static;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            gzip_static on;
            expires max;
            add_header Cache-Control public;
            access_log off;
        }

        ## Log File Manager Application에서 업로드된 파일을 host하기 위한 설정. .  ( mysite/settings.py : MEDIA_ROOT 값을 지정 )
        location /fs_madia {
            # 어플리케이션에 소스에 있는 fs_media 폴더의 절대경로 지정 
            alias D:\sol\playwatcher\fileuploadserver\src\fs_media;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            gzip_static on;
            expires max;
            add_header Cache-Control public;
            access_log off;
        }
 
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
